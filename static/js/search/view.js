// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  mtracker.search.view.HitGroupContentSearchTableRow = (function(_super) {

    __extends(HitGroupContentSearchTableRow, _super);

    function HitGroupContentSearchTableRow() {
      return HitGroupContentSearchTableRow.__super__.constructor.apply(this, arguments);
    }

    HitGroupContentSearchTableRow.prototype.template = crud.template('ejs/search/table_row.ejs');

    return HitGroupContentSearchTableRow;

  })(crud.view.TableRow);

  mtracker.search.view.HitGroupContentSearchTable = (function(_super) {

    __extends(HitGroupContentSearchTable, _super);

    function HitGroupContentSearchTable() {
      return HitGroupContentSearchTable.__super__.constructor.apply(this, arguments);
    }

    HitGroupContentSearchTable.prototype.itemViewClass = mtracker.search.view.HitGroupContentSearchTableRow;

    HitGroupContentSearchTable.prototype.template = crud.template('ejs/search/table.ejs');

    return HitGroupContentSearchTable;

  })(crud.view.Table);

  mtracker.search.view.HorizontalFullTextSearchItem = (function(_super) {

    __extends(HorizontalFullTextSearchItem, _super);

    function HorizontalFullTextSearchItem() {
      return HorizontalFullTextSearchItem.__super__.constructor.apply(this, arguments);
    }

    HorizontalFullTextSearchItem.prototype.tagName = 'div';

    return HorizontalFullTextSearchItem;

  })(crud.view.FullTextSearchItem);

  mtracker.search.view.HorizontalFilterGroup = (function(_super) {
    var filterWidgets;

    __extends(HorizontalFilterGroup, _super);

    function HorizontalFilterGroup() {
      return HorizontalFilterGroup.__super__.constructor.apply(this, arguments);
    }

    HorizontalFilterGroup.prototype.appendTo = 'div';

    HorizontalFilterGroup.prototype.attributes = {
      "class": 'span row'
    };

    HorizontalFilterGroup.prototype.template = crud.template('ejs/search/horizontal_filter_group.ejs');

    filterWidgets = _.extend(crud.view.standardFilterWidgets, {
      text: mtracker.search.view.HorizontalFullTextSearchItem
    });

    return HorizontalFilterGroup;

  })(crud.view.FilterGroup);

  mtracker.search.view.MultiSelectFilterItem = (function(_super) {

    __extends(MultiSelectFilterItem, _super);

    function MultiSelectFilterItem() {
      return MultiSelectFilterItem.__super__.constructor.apply(this, arguments);
    }

    MultiSelectFilterItem.prototype.tagName = 'option';

    MultiSelectFilterItem.prototype.template = crud.template('ejs/search/multi_select.ejs');

    MultiSelectFilterItem.prototype.attributes = function() {
      return {
        'value': this.options.filter.key
      };
    };

    return MultiSelectFilterItem;

  })(crud.view.ChoiceFilterItem);

  mtracker.search.view.MultiSelectFilterGroup = (function(_super) {

    __extends(MultiSelectFilterGroup, _super);

    function MultiSelectFilterGroup() {
      return MultiSelectFilterGroup.__super__.constructor.apply(this, arguments);
    }

    MultiSelectFilterGroup.prototype.appendTo = 'select';

    MultiSelectFilterGroup.prototype.attributes = {
      "class": 'span row'
    };

    MultiSelectFilterGroup.prototype.template = crud.template('ejs/search/multi_select_group.ejs');

    MultiSelectFilterGroup.prototype.filterWidgets = _.extend(crud.view.standardFilterWidgets, {
      choice: mtracker.search.view.MultiSelectFilterItem
    });

    return MultiSelectFilterGroup;

  })(crud.view.FilterGroup);

  mtracker.search.view.FilterList = (function(_super) {

    __extends(FilterList, _super);

    function FilterList() {
      return FilterList.__super__.constructor.apply(this, arguments);
    }

    FilterList.prototype.attributes = {
      "class": 'row fluid'
    };

    return FilterList;

  })(crud.view.FilterList);

}).call(this);
